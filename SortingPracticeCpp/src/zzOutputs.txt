Sorting Performance In C++ built on Sep  8 2025 at 14:46:28
testBlockSort()
Merging blocks 100 times on an test_array of size    8 using stategy ROTATE    took on average    7.7 compares and   19.1 moves
Merging blocks 100 times on an test_array of size   16 using stategy ROTATE    took on average   17.6 compares and   66.5 moves
Merging blocks 100 times on an test_array of size   32 using stategy ROTATE    took on average   37.8 compares and  229.9 moves
Merging blocks 100 times on an test_array of size   64 using stategy ROTATE    took on average   77.7 compares and  845.0 moves
Merging blocks 100 times on an test_array of size  128 using stategy ROTATE    took on average  157.2 compares and 3197.1 moves
PASS:  function testBlockSortMergeBlocksRandomly() returns TRUE
Merging blocks 100 times on an test_array of size    8 using stategy TABLE     took on average    6.5 compares and   14.6 moves
Merging blocks 100 times on an test_array of size   16 using stategy TABLE     took on average   14.1 compares and   36.1 moves
Merging blocks 100 times on an test_array of size   32 using stategy TABLE     took on average   30.1 compares and   82.6 moves
Merging blocks 100 times on an test_array of size   64 using stategy TABLE     took on average   61.9 compares and  175.0 moves
Merging blocks 100 times on an test_array of size  128 using stategy TABLE     took on average  126.3 compares and  367.0 moves
PASS:  function testBlockSortMergeBlocksRandomly() returns TRUE
Sorting 40320 unique arrays of size 8 using strategy ROTATE    took average of 7 compares and 19 moves
PASS:  function testBlockSortMergeBlocksExhaustively() returns TRUE
Sorting 40320 unique arrays of size 8 using strategy TABLE     took average of 6 compares and 14 moves
PASS:  function testBlockSortMergeBlocksExhaustively() returns TRUE
testBlockSort() ran 4 successful tests
