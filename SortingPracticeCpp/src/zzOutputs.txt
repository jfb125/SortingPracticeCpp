Sorting Performance In C++ built on Aug 22 2025 at 19:50:06
testBlockSort()
10 elements with block size 3 10000 times
 ..  0 unique values took on average 2.7 compares and 9.6 moves
 ..  5 unique values took on average 2.4 compares and 5.9 moves
11 elements with block size 3 10000 times
 ..  0 unique values took on average 2.8 compares and 10.9 moves
 ..  5 unique values took on average 2.7 compares and 10.7 moves
12 elements with block size 3 10000 times
 ..  0 unique values took on average 2.9 compares and 12.8 moves
 ..  5 unique values took on average 2.8 compares and 12.4 moves
13 elements with block size 3 10000 times
 ..  0 unique values took on average 3.3 compares and 16.6 moves
 ..  5 unique values took on average 3.2 compares and 15.9 moves
14 elements with block size 3 10000 times
 ..  0 unique values took on average 4.7 compares and 21.9 moves
 ..  5 unique values took on average 4.1 compares and 15.2 moves
15 elements with block size 3 10000 times
 ..  0 unique values took on average 5.0 compares and 25.0 moves
 ..  5 unique values took on average 4.5 compares and 19.1 moves
16 elements with block size 4 10000 times
 ..  0 unique values took on average 2.8 compares and 17.9 moves
 ..  5 unique values took on average 2.6 compares and 14.0 moves
17 elements with block size 4 10000 times
 ..  0 unique values took on average 3.0 compares and 21.1 moves
 ..  5 unique values took on average 2.9 compares and 20.2 moves
18 elements with block size 4 10000 times
 ..  0 unique values took on average 4.3 compares and 26.5 moves
 ..  5 unique values took on average 3.9 compares and 19.4 moves
19 elements with block size 4 10000 times
 ..  0 unique values took on average 4.4 compares and 29.8 moves
 ..  5 unique values took on average 4.0 compares and 22.1 moves
20 elements with block size 4 10000 times
 ..  0 unique values took on average 4.7 compares and 35.2 moves
 ..  5 unique values took on average 4.1 compares and 24.6 moves
21 elements with block size 4 10000 times
 ..  0 unique values took on average 4.9 compares and 38.3 moves
 ..  5 unique values took on average 4.4 compares and 29.9 moves
22 elements with block size 4 10000 times
 ..  0 unique values took on average 5.1 compares and 43.0 moves
 ..  5 unique values took on average 4.6 compares and 32.1 moves
23 elements with block size 4 10000 times
 ..  0 unique values took on average 5.3 compares and 46.1 moves
 ..  5 unique values took on average 4.9 compares and 37.0 moves
24 elements with block size 4 10000 times
 ..  0 unique values took on average 5.5 compares and 50.6 moves
 ..  5 unique values took on average 4.9 compares and 38.4 moves
25 elements with block size 5 10000 times
 ..  0 unique values took on average 4.5 compares and 36.1 moves
 ..  5 unique values took on average 4.0 compares and 24.5 moves
26 elements with block size 5 10000 times
 ..  0 unique values took on average 4.7 compares and 40.4 moves
 ..  5 unique values took on average 4.1 compares and 28.1 moves
27 elements with block size 5 10000 times
 ..  0 unique values took on average 4.9 compares and 44.3 moves
 ..  5 unique values took on average 4.4 compares and 32.9 moves
28 elements with block size 5 10000 times
 ..  0 unique values took on average 5.1 compares and 48.7 moves
 ..  5 unique values took on average 4.5 compares and 34.6 moves
29 elements with block size 5 10000 times
 ..  0 unique values took on average 5.2 compares and 51.3 moves
 ..  5 unique values took on average 4.6 compares and 37.7 moves
30 elements with block size 5 10000 times
 ..  0 unique values took on average 5.4 compares and 55.9 moves
 ..  5 unique values took on average 4.7 compares and 41.2 moves
31 elements with block size 5 10000 times
 ..  0 unique values took on average 5.6 compares and 59.9 moves
 ..  5 unique values took on average 5.0 compares and 45.9 moves
32 elements with block size 5 10000 times
 ..  0 unique values took on average 6.9 compares and 64.3 moves
 ..  5 unique values took on average 6.2 compares and 50.1 moves
33 elements with block size 5 10000 times
 ..  0 unique values took on average 7.1 compares and 68.8 moves
 ..  5 unique values took on average 6.5 compares and 55.2 moves
34 elements with block size 5 10000 times
 ..  0 unique values took on average 7.4 compares and 74.3 moves
 ..  5 unique values took on average 6.8 compares and 63.4 moves
35 elements with block size 5 10000 times
 ..  0 unique values took on average 7.6 compares and 77.7 moves
 ..  5 unique values took on average 7.0 compares and 67.9 moves
36 elements with block size 6 10000 times
 ..  0 unique values took on average 5.3 compares and 71.4 moves
 ..  5 unique values took on average 4.6 compares and 51.4 moves
37 elements with block size 6 10000 times
 ..  0 unique values took on average 5.5 compares and 75.9 moves
 ..  5 unique values took on average 4.9 compares and 55.5 moves
38 elements with block size 6 10000 times
 ..  0 unique values took on average 6.6 compares and 77.6 moves
 ..  5 unique values took on average 6.1 compares and 62.1 moves
39 elements with block size 6 10000 times
 ..  0 unique values took on average 6.7 compares and 81.0 moves
 ..  5 unique values took on average 6.2 compares and 66.0 moves
40 elements with block size 6 10000 times
 ..  0 unique values took on average 7.1 compares and 91.2 moves
 ..  5 unique values took on average 6.5 compares and 76.7 moves
41 elements with block size 6 10000 times
 ..  0 unique values took on average 7.3 compares and 95.7 moves
 ..  5 unique values took on average 6.6 compares and 76.1 moves
42 elements with block size 6 10000 times
 ..  0 unique values took on average 7.4 compares and 98.1 moves
 ..  5 unique values took on average 6.9 compares and 85.6 moves
43 elements with block size 6 10000 times
 ..  0 unique values took on average 7.5 compares and 101.1 moves
 ..  5 unique values took on average 7.1 compares and 89.6 moves
44 elements with block size 6 10000 times
 ..  0 unique values took on average 8.0 compares and 114.0 moves
 ..  5 unique values took on average 7.2 compares and 94.0 moves
45 elements with block size 6 10000 times
 ..  0 unique values took on average 8.3 compares and 119.5 moves
 ..  5 unique values took on average 7.3 compares and 98.0 moves
46 elements with block size 6 10000 times
 ..  0 unique values took on average 8.3 compares and 120.2 moves
 ..  5 unique values took on average 7.6 compares and 105.3 moves
47 elements with block size 6 10000 times
 ..  0 unique values took on average 8.5 compares and 125.1 moves
 ..  5 unique values took on average 7.7 compares and 107.4 moves
48 elements with block size 6 10000 times
 ..  0 unique values took on average 9.0 compares and 137.4 moves
 ..  5 unique values took on average 7.8 compares and 109.9 moves
49 elements with block size 7 10000 times
 ..  0 unique values took on average 7.4 compares and 108.5 moves
 ..  5 unique values took on average 6.8 compares and 90.5 moves
50 elements with block size 7 10000 times
 ..  0 unique values took on average 7.5 compares and 111.5 moves
 ..  5 unique values took on average 6.9 compares and 96.2 moves
51 elements with block size 7 10000 times
 ..  0 unique values took on average 7.7 compares and 116.9 moves
 ..  5 unique values took on average 7.1 compares and 101.9 moves
52 elements with block size 7 10000 times
 ..  0 unique values took on average 8.0 compares and 126.1 moves
 ..  5 unique values took on average 7.2 compares and 104.5 moves
PASS:  function testBlockSortSortBlocks() returns TRUE
