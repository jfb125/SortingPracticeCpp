Sorting Performance In C++ built on Sep 25 2025 at 18:45:34
(n =   3, k =   1) generates 3 combinations of values { 1 2 3 }
0: { 1 }
1: { 2 }
2: { 3 }
There were no duplicate combinations generated

(n =   3, k =   2) generates 3 combinations of values { 1 2 3 }
0: { 1, 2 }
1: { 1, 3 }
2: { 2, 3 }
There were no duplicate combinations generated

(n =   3, k =   3) generates 1 combinations of values { 1 2 3 }
0: { 1, 2, 3 }
There were no duplicate combinations generated

(n =   4, k =   1) generates 4 combinations of values { 1 2 3 4 }
0: { 1 }
1: { 2 }
2: { 3 }
3: { 4 }
There were no duplicate combinations generated

(n =   4, k =   2) generates 6 combinations of values { 1 2 3 4 }
0: { 1, 2 }
1: { 1, 3 }
2: { 1, 4 }
3: { 2, 3 }
4: { 2, 4 }
5: { 3, 4 }
There were no duplicate combinations generated

(n =   4, k =   3) generates 4 combinations of values { 1 2 3 4 }
0: { 1, 2, 3 }
1: { 1, 2, 4 }
2: { 1, 3, 4 }
3: { 2, 3, 4 }
There were no duplicate combinations generated

(n =   4, k =   4) generates 1 combinations of values { 1 2 3 4 }
0: { 1, 2, 3, 4 }
There were no duplicate combinations generated

